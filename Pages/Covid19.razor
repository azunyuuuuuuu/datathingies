@page "/covid19"

@using datathingies.Data
@inject Covid19DataService _covid

<div class="markdown">


    <h1>Covid19 Data</h1>

    @if (rawdata == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <h2> Worldwide Cases </h2>
        @rawdata.Where(x=>x.Location == "World").OrderByDescending(x=>x.Date).First().TotalCases

        <h2> Top 25 </h2>

        <div class="container">
            <div class="lg:grid lg:grid-flow-col lg:space-x-8 w-full">

                <div>
                    <h3>Cases</h3>
                    <table class="table-auto w-full">
                        <thead>
                            <th></th>
                            <th>Cases</th>
                            <th>Deaths</th>
                            <th>Vaccinations</th>
                        </thead>
                        <tbody>
                            @foreach (var entry in top25cases)
                            {
                                <tr>
                                    <td>@entry.Location</td>
                                    <td>@entry.TotalCases</td>
                                    <td>@entry.TotalDeaths</td>
                                    <td>@entry.TotalVaccinations</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div>
                    <h3>Deaths</h3>
                    <table class="table-auto w-full">
                        <thead>
                            <th></th>
                            <th>Cases</th>
                            <th>Deaths</th>
                            <th>Vaccinations</th>
                        </thead>
                        <tbody>
                            @foreach (var entry in top25deaths)
                            {
                                <tr>
                                    <td>@entry.Location</td>
                                    <td>@entry.TotalCases</td>
                                    <td>@entry.TotalDeaths</td>
                                    <td>@entry.TotalVaccinations</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div>
                    <h3>Vaccinations</h3>
                    <table class="table-auto w-full">
                        <thead>
                            <th></th>
                            <th>Cases</th>
                            <th>Deaths</th>
                            <th>Vaccinations</th>
                        </thead>
                        <tbody>
                            @foreach (var entry in top25vaccinations)
                            {
                                <tr>
                                    <td>@entry.Location</td>
                                    <td>@entry.TotalCases</td>
                                    <td>@entry.TotalDeaths</td>
                                    <td>@entry.TotalVaccinations</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

            </div>
        </div>

        @* <h2> Overall Data </h2>
            <table class="w-full table-auto">
            <thead class="sticky font-semibold">
            <tr>
            <th>Continent</th>
            <th>Country</th>
            <th>Total Cases</th>
            <th>Total Deaths</th>
            <th>Total Vaccinations</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var entry in rawdata.GroupBy(x => x.Location).Select(x => x.OrderByDescending(x =>
            x.Date).First()))
            {
            <tr>
            <td>@entry.Continent</td>
            <td>@entry.Location</td>
            <td>@entry.TotalCases</td>
            <td>@entry.TotalDeaths</td>
            <td>@entry.TotalVaccinations</td>
            </tr>
            }
            </tbody>
            </table> *@

        <p>
            Data entries: @rawdata.Count()
        </p>
    }

</div>

@code {
    private Covid19DataEntry[] rawdata;

    private IEnumerable<Covid19DataEntry> top25cases =>
        rawdata.Where(x => !string.IsNullOrWhiteSpace(x.Continent))
        .GroupBy(x => x.Location)
        .Select(x => x.OrderByDescending(y => y.TotalCases).First())
        .OrderByDescending(x => x.TotalCases)
        .Take(25);

    private IEnumerable<Covid19DataEntry> top25deaths =>
        rawdata.Where(x => !string.IsNullOrWhiteSpace(x.Continent))
        .GroupBy(x => x.Location)
        .Select(x => x.OrderByDescending(y => y.TotalDeaths).First())
        .OrderByDescending(x => x.TotalDeaths)
        .Take(25);

    private IEnumerable<Covid19DataEntry> top25vaccinations =>
        rawdata.Where(x => !string.IsNullOrWhiteSpace(x.Continent))
        .GroupBy(x => x.Location)
        .Select(x => x.OrderByDescending(y => y.TotalVaccinations).First())
        .OrderByDescending(x => x.TotalVaccinations)
        .Take(25);

    protected override async Task OnInitializedAsync()
    {
        rawdata = await _covid.GetAllDataAsync();
    }
}

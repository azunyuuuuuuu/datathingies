@page "/covid19heatmap/{country?}"

@using datathingies.Data
@using Humanizer
@inject Covid19DataService _covid

<div class="markdown">


    <h1>Covid19 Data</h1>

    @if (countries == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <p>
            <label>
                Country: @Country
                <select value="@Country" @onchange="CountrySelectionChanged" @onkeypress:preventDefault>
                    <option value="">Select a country ...</option>
                    @foreach (var item in countries)
                    {
                        <option value="@item">@item</option>
                    }
                </select>
            </label>
        </p>
    }

    @if (heatmapcases == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <h2> Heatmap </h2>

        <div class="container">
            <div class="lg:grid lg:grid-flow-col lg:space-x-8 w-full">

                <div>
                    <h3>Cases</h3>
                    <table class="table-fixed w-full">
                        <thead>
                            <th class="">Week</th>
                            <th class=""></th>
                            <th class="text-right w-1/8">Mo</th>
                            <th class="text-right w-1/8">Tu</th>
                            <th class="text-right w-1/8">We</th>
                            <th class="text-right w-1/8">Th</th>
                            <th class="text-right w-1/8">Fr</th>
                            <th class="text-right w-1/8">Sa</th>
                            <th class="text-right w-1/8">Su</th>
                            <th class="text-right w-1/8">sum</th>
                        </thead>
                        <tbody>
                            @foreach (var entry in heatmapcases)
                            {
                                <tr>
                                    <td>@entry.Week</td>

                                    <td>@entry.Month</td>

                                    <td class="text-right" title="@entry.Monday?.Date" data-color="">
                                        @entry.Monday?.NewCases?.ToString("#,##0")</td>

                                    <td class="text-right" title="@entry.Tuesday?.Date" data-color="">
                                        @entry.Tuesday?.NewCases?.ToString("#,##0")</td>

                                    <td class="text-right" title="@entry.Wednesday?.Date" data-color="">
                                        @entry.Wednesday?.NewCases?.ToString("#,##0")</td>

                                    <td class="text-right" title="@entry.Thursday?.Date" data-color="">
                                        @entry.Thursday?.NewCases?.ToString("#,##0")</td>

                                    <td class="text-right" title="@entry.Friday?.Date" data-color="">
                                        @entry.Friday?.NewCases?.ToString("#,##0")</td>

                                    <td class="text-right" title="@entry.Saturday?.Date" data-color="">
                                        @entry.Saturday?.NewCases?.ToString("#,##0")</td>

                                    <td class="text-right" title="@entry.Sunday?.Date" data-color="">
                                        @entry.Sunday?.NewCases?.ToString("#,##0")</td>
                                    <td>-</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>


            </div>
        </div>
    }


</div>

@code {
    private IEnumerable<string> countries;

    [Parameter]
    public string Country { get; set; } = string.Empty;

    private IEnumerable<Covid19WeeklyData> heatmapcases;

    protected override async Task OnInitializedAsync()
    {
        await _covid.InitializeData();
        countries = _covid.GetCountries();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (!string.IsNullOrWhiteSpace(Country) && countries.Select(x => x.ToLower()).Contains(Country.ToLower()))
        {
            heatmapcases = _covid.GetHeatmapDataForCountry(Country.ToLower());
        }
    }

    private async Task CountrySelectionChanged(ChangeEventArgs e)
    {
        Country = (string)e.Value;
        await OnParametersSetAsync();
    }


}
